#include "SerialCommand.h"
#include <SoftwareSerial.h>

#define SerialPort Serial
#define BluetoothPort Serial1
#define Baudrate 9600
#define LED_PIN LED_BUILTIN

// Define the software serial pins for Bluetooth communication
SoftwareSerial BTSerial(10, 11); // RX, TX
SerialCommand sCmd(BluetoothPort);

void setup()
{
  SerialPort.begin(Baudrate); // set serial baudrate at 9600
  BluetoothPort.begin(Baudrate);    // initialize software serial for Bluetooth
  sCmd.addCommand("led", onLed);
  sCmd.setDefaultHandler(onUnknownCommand);

  SerialPort.println("ready");
  pinMode(LED_PIN, OUTPUT); // Set the LED pin as an output
}

void loop()
{
  sCmd.readSerial();
}

void onLed(char *command)
{
  // Parse the command to check if it is "led on" or "led off"
  char *arg = sCmd.next(); // Get the argument following the command

  if (arg != NULL)
  {
    if (strcmp(arg, "on") == 0)
    {
      digitalWrite(LED_PIN, HIGH); // Turn on the LED
      SerialPort.println("LED turned on");
      BluetoothPort.println("LED turned on");
    }
    else if (strcmp(arg, "off") == 0)
    {
      digitalWrite(LED_PIN, LOW); // Turn off the LED
      SerialPort.println("LED turned off");
      BluetoothPort.println("LED turned off");
    }
  }
}

void onUnknownCommand(char *command)
{
  SerialPort.print("unknown command: \"");
  SerialPort.print(command);
  SerialPort.println("\"");

  // Send the unknown command over Bluetooth
  BluetoothPort.print("unknown command: \"");
  BluetoothPort.print(command);
  BluetoothPort.println("\"");
}

// Define motor control pins for Motor A
const int in1 = 4;  // IN1 on the L298N
const int in2 = 5;  // IN2 on the L298N
const int enA = 9;  // ENA (Enable pin for Motor A) on the L298N

// Define motor control pins for Motor B
const int in3 = 7;  // IN3 on the L298N
const int in4 = 8;  // IN4 on the L298N
const int enB = 10; // ENB (Enable pin for Motor B) on the L298N

// Time management
unsigned long previousMillis = 0;    // Stores the last time the motors changed direction
const long interval = 2000;          // Interval between direction changes (in milliseconds)

// Max speed limit (0-255 for PWM), 50% speed would be 127
const int maxSpeed = 200;

void setup() {
  // Set motor control pins as outputs
  pinMode(in1, OUTPUT);
  pinMode(in2, OUTPUT);
  pinMode(in3, OUTPUT);
  pinMode(in4, OUTPUT);

  // Set ENA and ENB as outputs (PWM)
  pinMode(enA, OUTPUT);
  pinMode(enB, OUTPUT);

  // Set initial motor speed to 50%
  analogWrite(enA, maxSpeed);
  analogWrite(enB, maxSpeed);

  // Start with motors spinning in opposite directions
  digitalWrite(in1, HIGH);
  digitalWrite(in2, LOW);
  digitalWrite(in3, LOW);
  digitalWrite(in4, HIGH);
}

void loop() {
  // Get the current time
  unsigned long currentMillis = millis();

  // Check if the time interval has passed
  if (currentMillis - previousMillis >= interval) {
    // Save the last time the motors changed direction
    previousMillis = currentMillis;

    // Toggle the motor directions
    // Motor A direction
    digitalWrite(in1, !digitalRead(in1));
    digitalWrite(in2, !digitalRead(in2));
    
    // Motor B direction
    digitalWrite(in3, !digitalRead(in3));
    digitalWrite(in4, !digitalRead(in4));
  }

  // Other tasks can be performed here while waiting for the next interval
}



